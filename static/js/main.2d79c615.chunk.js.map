{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/nftData/nftDataReducer.js","redux/tokenData/tokenDataReducer.js","redux/store.js","redux/nftData/nftDataActions.js","redux/tokenData/tokenDataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","nftSmartContract","tokenSmartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","mintedWithNftc","mintedWithBch","totalSupply","cost","error","nftDataReducer","tokensApproved","tokenBalance","tokenDataReducer","rootReducer","combineReducers","blockchain","nftData","tokenData","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchNftDataFailed","fetchTokenDataFailed","fetchTokenData","_owner","_spender","dispatch","a","console","log","getState","methods","allowance","call","balanceOf","Number","connectFailed","updateAccount","nftCa","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","truncate","input","len","length","substring","Completionist","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledImg","img","StyledLink","App","useDispatch","useSelector","useState","newToSmartBch","setNewToSmartBch","claimingNft","setClaimingNft","approvingToken","setApprovingToken","mintFeedback","setMintFeedback","nftcFeedback","setNftcFeedback","mintAmount","setMintAmount","NFT_CONTRACT_ADDRESS","TOKEN_CONTRACT_ADDRESS","NFT_SCAN_LINK","TOKEN_SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY_BCH","MAX_SUPPLY_NFTC","MAX_SUPPLY","MAX_MINT_PER_TX","WEI_COST_BCH","DISPLAY_COST_BCH","WEI_COST_NFTC","DISPLAY_COST_NFTC","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","LAUNCH_DATE","END_DATE","CONFIG","SET_CONFIG","claimNFTsWithBCH","nftsLeft","costBch","gasLimit","totalCostBchWei","String","BigInt","totalGasLimit","Math","min","eth","getBalance","bchBalance","round","mint","send","to","from","value","once","err","then","receipt","approveNftc","mintsToApprove","costNftc","nftcToApprove","floor","approve","claimNFTsWithNFTC","totalCostNftcWei","mintWithNftc","getNftAndTokenData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","isMobile","borderRadius","border","textAlign","color","paddingBottom","maxWidth","marginTop","src","alt","target","href","Date","fontSize","fontFamily","width","onClick","e","preventDefault","nftAbiResponse","nftAbi","tokenAbiResponse","tokenAbi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","nftSmartContractObj","tokenSmartContractObj","on","location","reload","params","chainId","utils","toHex","code","chainName","nativeCurrency","name","decimals","symbol","rpcUrls","fontWeight","lineHeight","disabled","newMintAmount","decrementMintAmount","onChange","parseInt","incrementMintAmount","toUTCString","className","date","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d79c615.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  nftSmartContract: null,\n  tokenSmartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        nftSmartContract: action.payload.nftSmartContract,\n        tokenSmartContract: action.payload.tokenSmartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  mintedWithNftc: 0,\n  mintedWithBch: 0,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst nftDataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        mintedWithNftc: action.payload.mintedWithNftc,\n        mintedWithBch: action.payload.mintedWithBch,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default nftDataReducer;\n","const initialState = {\n  loading: false,\n  tokensApproved: 0,\n  // bchBalance: 0,\n  tokenBalance: 0,\n  mintedWithNftc: 0,\n  mintedWithBch: 0,\n  totalSupply: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst tokenDataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        tokensApproved: action.payload.tokensApproved,\n        // bchBalance: action.payload.bchBalance,\n        tokenBalance: action.payload.tokenBalance,\n        mintedWithNftc: action.payload.mintedWithNftc,\n        mintedWithBch: action.payload.mintedWithBch,\n        totalSupply: action.payload.totalSupply,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default tokenDataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport nftDataReducer from \"./nftData/nftDataReducer\";\nimport tokenDataReducer from \"./tokenData/tokenDataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  nftData: nftDataReducer,\n  tokenData: tokenDataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchNftDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchNftDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchNftDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchNftData = () => {\n  return async (dispatch) => {\n    dispatch(fetchNftDataRequest());\n    try {\n      let mintedWithBch = await store\n        .getState()\n        .blockchain.nftSmartContract.methods.mintedWithBch()\n        .call();\n      let mintedWithNftc = await store\n        .getState()\n        .blockchain.nftSmartContract.methods.mintedWithNftc()\n        .call();\n      let totalSupply = Number(mintedWithBch) + Number(mintedWithNftc);\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.nftSmartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchNftDataSuccess({\n          mintedWithBch,\n          mintedWithNftc,\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchNftDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// log\nimport store from \"../store\";\n\nconst fetchTokenDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchTokenDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchTokenDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchTokenData = (_owner, _spender) => {\n  return async (dispatch) => {\n    dispatch(fetchTokenDataRequest());\n    try {\n      console.log(_owner, _spender);\n      let tokensApproved = await store\n        .getState()\n        .blockchain.tokenSmartContract.methods.allowance(_owner, _spender)\n        .call();\n      // let bchBalance = await store.getState().blockchain.web3.eth.getBalance(accounts[0]);\n      let tokenBalance = await store\n        .getState()\n        .blockchain.tokenSmartContract.methods.balanceOf(_owner)\n        .call();\n      let mintedWithBch = await store\n        .getState()\n        .blockchain.nftSmartContract.methods.mintedWithBch()\n        .call();\n      let mintedWithNftc = await store\n        .getState()\n        .blockchain.nftSmartContract.methods.mintedWithNftc()\n        .call();\n      let totalSupply = Number(mintedWithBch) + Number(mintedWithNftc);\n\n\n      dispatch(\n        fetchTokenDataSuccess({\n          tokensApproved,\n          // bchBalance,\n          tokenBalance,\n          mintedWithBch,\n          mintedWithNftc,\n          totalSupply,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchTokenDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchNftData } from \"../nftData/nftDataActions\";\nimport { fetchTokenData } from \"../tokenData/tokenDataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n\n    const nftAbiResponse = await fetch(\"/config/nft_abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const nftAbi = await nftAbiResponse.json();\n\n    const tokenAbiResponse = await fetch(\"/config/token_abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const tokenAbi = await tokenAbiResponse.json();\n\n\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const nftSmartContractObj = new Web3EthContract(\n            nftAbi,\n            CONFIG.NFT_CONTRACT_ADDRESS\n          );\n          const tokenSmartContractObj = new Web3EthContract(\n            tokenAbi,\n            CONFIG.TOKEN_CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              nftSmartContract: nftSmartContractObj,\n              tokenSmartContract: tokenSmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0], \"0xb72df4BD9951dDD59bbE2C5FC4d43d17d5B429df\"));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME} and then reload this website.`));\n          \n          try {\n            await window.ethereum.request({\n              method: 'wallet_switchEthereumChain',\n              params: [{ chainId: web3.utils.toHex(CONFIG.NETWORK.ID) }]\n            });\n          } catch (err) {\n            // This error code indicates that the chain has not been added to MetaMask\n            if (err.code === 4902) {\n              dispatch(connectFailed(`Add ${CONFIG.NETWORK.NAME} to Metamask and then reload this website.`));\n              await window.ethereum.request({\n                method: 'wallet_addEthereumChain',\n                params: [\n                  {\n                    chainName: 'SmartBch Mainnet',\n                    chainId: web3.utils.toHex(CONFIG.NETWORK.ID),\n                    nativeCurrency: { name: 'SBCH', decimals: 18, symbol: 'SBCH' },\n                    rpcUrls: ['https://smartbch.fountainhead.cash/mainnet']\n                  }\n                ]\n              });\n            }\n          }\n\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong!\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Please install Metamask first from metamask.io\"));\n    }\n  };\n};\n\nexport const updateAccount = (account, nftCa) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchNftData(account));\n    dispatch(fetchTokenData(account, nftCa));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--site-bg);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--normal-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--normal-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--normal-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","// npx browserslist@latest --update-db\n\n\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchNftData } from \"./redux/nftData/nftDataActions\";\nimport { fetchTokenData } from \"./redux/tokenData/tokenDataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport Countdown from 'react-countdown';\nimport { BrowserView, MobileView, isBrowser, isMobile } from 'react-device-detect';\n\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nconst Completionist = () => \"\";\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--buttons);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--button-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px var(--button-shadow);\n  -webkit-box-shadow: 0px 6px 0px -2px var(--button-shadow);\n  -moz-box-shadow: 0px 6px 0px -2px var(--button-shadow);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--buttons);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--button-text);\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px var(--button-shadow);\n  -webkit-box-shadow: 0px 4px 0px -2px var(--button-shadow);\n  -moz-box-shadow: 0px 4px 0px -2px var(--button-shadow);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n  margin-top: 1em;\n`;\n\nexport const StyledImg = styled.img`\n  // box-shadow: 0px 4px 0px -2px rgba(250, 50, 250, 0.3);\n  border: none;\n  background-color: var(--box-bg);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--highlighted-text);\n  text-decoration: none;\n`;\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const nftData = useSelector((state) => state.nftData);\n  const tokenData = useSelector((state) => state.tokenData);\n  const [newToSmartBch, setNewToSmartBch] = useState(false);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [approvingToken, setApprovingToken] = useState(false);\n  const [mintFeedback, setMintFeedback] = useState(`Please select how many NFTs you want to mint in one transcation.`);\n  const [nftcFeedback, setNftcFeedback] = useState(`Please select how many NFTs you want to mint with NFTC.`);\n  const [mintAmount, setMintAmount] = useState(25);\n  const [CONFIG, SET_CONFIG] = useState({\n    NFT_CONTRACT_ADDRESS: \"\",\n    TOKEN_CONTRACT_ADDRESS: \"\",\n    NFT_SCAN_LINK: \"\",\n    TOKEN_SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY_BCH: 1,\n    MAX_SUPPLY_NFTC: 1,\n    MAX_SUPPLY: 1,\n    MAX_MINT_PER_TX: 1,\n    WEI_COST_BCH: 0,\n    DISPLAY_COST_BCH: 0,\n    WEI_COST_NFTC: 0,\n    DISPLAY_COST_NFTC: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n    LAUNCH_DATE: \"\",\n    END_DATE: \"\",\n  });\n\n\n  const claimNFTsWithBCH = async () => {\n    if (blockchain.account !== \"\" && blockchain.nftSmartContract !== null) {\n      await dispatch(fetchTokenData(blockchain.account, CONFIG.NFT_CONTRACT_ADDRESS));\n      let nftsLeft = CONFIG.MAX_SUPPLY_BCH - Number(nftData.mintedWithBch);\n      if (mintAmount > nftsLeft) {\n        setMintFeedback(`Not possible! There are only ${nftsLeft} ${CONFIG.NFT_NAME} NFTs available for minting with BCH!`);\n        return false;\n      }\n\n    } else {\n      setMintFeedback(`No connection to ${CONFIG.NETWORK} possible. Please reload the website.`);\n      return false;\n    }\n\n    let costBch = CONFIG.WEI_COST_BCH;\n\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostBchWei = String(BigInt(costBch * mintAmount));\n    let totalGasLimit = String(BigInt(Math.min(10000000, gasLimit + (gasLimit - 25000) * (mintAmount - 1))));\n    console.log(\"CostBch: \", totalCostBchWei);\n\n    console.log(\"Gas limit: \", totalGasLimit);\n\n    let bchBalance = await blockchain.web3.eth.getBalance(blockchain.account);\n    console.log(bchBalance);\n\n    if (bchBalance < Number(totalCostBchWei) + Number(totalGasLimit)) {\n      setMintFeedback(`You have ${Math.round(bchBalance / 10 ** 14) / 10 ** 4} BCH in your wallet. You can mint up to ${Math.round(bchBalance / Number(costBch) - 0.5)} NFTs with that.`);\n      return false;\n    }\n\n    setMintFeedback(`Minting your ${CONFIG.NFT_NAME} NFTs. Please wait!`);\n    setClaimingNft(true);\n    blockchain.nftSmartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.NFT_CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostBchWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setMintFeedback(\"An error occured.\\nPlease try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setMintFeedback(\n          `Congratulations! You successfully minted some ${CONFIG.NFT_NAME} NFTs! Visit ${CONFIG.MARKETPLACE} to take a look at your NFTs.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchTokenData(blockchain.account, CONFIG.NFT_CONTRACT_ADDRESS));\n      });\n  };\n\n\n  const approveNftc = (mintsToApprove) => {\n    let costNftc = CONFIG.WEI_COST_NFTC;\n    let nftcToApprove = String(BigInt(costNftc * mintAmount + 10 ** 18));\n    if (-1 !== mintsToApprove) { nftcToApprove = String(BigInt(costNftc * mintsToApprove)); }\n    else if (-2 !== mintsToApprove) { nftcToApprove = String(BigInt(tokenData.tokenBalance)); }\n    if (Math.floor(Number(tokenData.tokensApproved) / 10 ** 18 / 850) === Math.floor(Number(nftcToApprove) / 10 ** 18 / 850)) {\n      setNftcFeedback(`This amount of NFTC is already approved.`);\n      return false;\n    }\n\n    let totalGasLimit = String(70000);\n\n    if (mintsToApprove > 0) {\n      setNftcFeedback(`Updating approval for NFTC...`);\n    } else {\n      setNftcFeedback(`Removing approval of NFTC...`);\n    }\n    setApprovingToken(true);\n\n    blockchain.tokenSmartContract.methods\n      .approve(CONFIG.NFT_CONTRACT_ADDRESS, nftcToApprove)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.TOKEN_CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: 0,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setNftcFeedback(\"An error occured.\\nPlease try again later.\");\n        setApprovingToken(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        if (mintsToApprove > 0) {\n          setNftcFeedback(\n            `NFTC approved. Now you can use it to mint your ${CONFIG.NFT_NAME} NFTs!`\n          );\n        } else {\n          setNftcFeedback(\n            `NFTC approval removed. You will have to approve NFTC again if you want to mint ${CONFIG.NFT_NAME} NFTs with NFTC.`\n          );\n        }\n\n        setApprovingToken(false);\n        dispatch(fetchTokenData(blockchain.account, CONFIG.NFT_CONTRACT_ADDRESS));\n      });\n  };\n\n  const claimNFTsWithNFTC = async () => {\n    let costNftc = CONFIG.WEI_COST_NFTC;\n    let totalCostNftcWei = String(BigInt(costNftc * mintAmount));\n    console.log(\"CostNftc: \", totalCostNftcWei);\n\n    if (blockchain.account !== \"\" && blockchain.nftSmartContract !== null) {\n      await dispatch(fetchTokenData(blockchain.account, CONFIG.NFT_CONTRACT_ADDRESS));\n      let nftsLeft = CONFIG.MAX_SUPPLY_NFTC - Number(nftData.mintedWithNftc);\n      if (mintAmount > nftsLeft) {\n        setMintFeedback(`Not possible! There are only ${nftsLeft} ${CONFIG.NFT_NAME} NFTs available for minting with NFTC!`);\n        return false;\n      }\n      if (BigInt(tokenData.tokensApproved) < BigInt(totalCostNftcWei)) {\n        setMintFeedback(`Not enough NFTC approved for minting ` + mintAmount + ` ${CONFIG.NFT_NAME} NFTs!`);\n        return false;\n      }\n      else if (BigInt(tokenData.tokenBalance) < BigInt(totalCostNftcWei)) {\n        setMintFeedback(`You don't own enough NFTC for minting ` + mintAmount + ` ${CONFIG.NFT_NAME} NFTs!`);\n        return false;\n      }\n    } else {\n      setMintFeedback(`No connection to ${CONFIG.NETWORK} possible. Please reload the website.`);\n      return false;\n    }\n\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalGasLimit = String(BigInt(Math.min(10000000, gasLimit + (gasLimit - 25000) * (mintAmount - 1))));\n\n    console.log(\"Gas limit: \", totalGasLimit);\n    setMintFeedback(`Minting your ${CONFIG.NFT_NAME} NFTs...`);\n    setClaimingNft(true);\n    blockchain.nftSmartContract.methods\n      .mintWithNftc(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.NFT_CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: 0,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setMintFeedback(\"An error occured: \\nPlease try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setMintFeedback(\n          `Congratulations! You successfully minted some ${CONFIG.NFT_NAME} NFTs! Visit ${CONFIG.MARKETPLACE} to take a look at your NFTs.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchTokenData(blockchain.account, CONFIG.NFT_CONTRACT_ADDRESS));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > CONFIG.MAX_MINT_PER_TX) {\n      newMintAmount = CONFIG.MAX_MINT_PER_TX;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const setMintAmountInput = (e) => {\n    let newMintAmount = parseInt(e.target.value);\n    if (newMintAmount > CONFIG.MAX_MINT_PER_TX) {\n      newMintAmount = CONFIG.MAX_MINT_PER_TX;\n    }\n    else if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  // const getNftData = () => {\n  //   if (blockchain.account !== \"\" && blockchain.nftSmartContract !== null) {\n  //     dispatch(fetchNftData(blockchain.account));\n  //   }\n  // };\n\n  const getNftAndTokenData = () => {\n    if (blockchain.account !== \"\" && blockchain.nftSmartContract !== null) {\n      dispatch(fetchTokenData(blockchain.account, CONFIG.NFT_CONTRACT_ADDRESS));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getNftAndTokenData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--site-bg)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? (isMobile ? \"/config/images/bgMobile.jpg\" : \"/config/images/bg.jpg\") : null}\n      >\n        {/* <StyledLogo alt={\"logo\"} src={\"/config/images/logo.jpg\"} /> */}\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          {/* <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"preview\"} src={\"/config/images/preview.gif\"} />\n          </s.Container>\n          <s.SpacerLarge /> */}\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--box-bg)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"none\",\n              // boxShadow: \"0px 4px 0px -2px rgba(250,50,250,0.3)\",\n            }}\n          >\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--normal-text)\",\n                paddingBottom: \"1em\",\n                maxWidth: \"450px\",\n              }}\n            ><img\n                style={{\n                  marginTop: \"1em\",\n                  maxWidth: \"100%\",\n                }}\n                src=\"/config/images/logo.png\"\n                alt=\"Kensho\" />\n\n              <p\n                style={{\n                  marginTop: \"1em\",\n                }}\n              >Kensho is the latest high-quality NFT collection created by NFT Club. After minting your Kenshos, you can stake them at <StyledLink target={\"_blank\"} href=\"https://app.nftclub.cash\">app.nftclub.cash</StyledLink> to generate passive income of NFTC tokens.\n              </p>\n              <p\n                style={{\n                  marginTop: \"1em\",\n                }}\n              >\n                <s.SpacerLarge />\n\n                <StyledImg alt={\"preview\"} src={\"/config/images/preview.gif\"} />\n              </p>\n            </s.TextDescription>\n            {new Date() < new Date(CONFIG.LAUNCH_DATE) ? (\n              <s.TextTitle\n                style={{\n                  textAlign: \"center\",\n                  fontSize: 24,\n                  color: \"var(--normal-text)\",\n                }}\n              >\n                Stay tuned! The {CONFIG.NFT_NAME} NFT collection is launching soon — only on SmartBCH!\n              </s.TextTitle>\n            ) : null}\n\n            <s.SpacerSmall />\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                fontFamily: \"Liberation Mono\",\n                color: \"var(--normal-text)\",\n              }}\n            >\n            </s.TextDescription>\n            <s.SpacerSmall />\n\n\n            {Number(nftData.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--big-text)\" }}\n                >\n                  The sale has ended!\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--big-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                  <img style={{\n                    width: \"192px\",\n                  }} src=\"/oasis_logo.svg\" alt=\"Oasis\" />\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.SpacerSmall />\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--highlighted-text)\" }}\n                >\n                  2,000 {CONFIG.SYMBOL} can be minted for {CONFIG.DISPLAY_COST_NFTC}{\" \"}\n                  NFTC per NFT.\n                </s.TextTitle>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--highlighted-text)\" }}\n                >\n                  10,000 {CONFIG.SYMBOL} can be minted for {CONFIG.DISPLAY_COST_BCH}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL} per NFT.\n                </s.TextTitle>\n                <s.SpacerMedium />\n                {CONFIG.TOKEN_CONTRACT_ADDRESS !== CONFIG.NFT_CONTRACT_ADDRESS ? (\n                  <>\n                    <StyledLink target={\"_blank\"} href={CONFIG.NFT_SCAN_LINK}>\n                      {CONFIG.NFT_NAME} CA: {truncate(CONFIG.NFT_CONTRACT_ADDRESS, 15)}\n                    </StyledLink>\n                    <s.SpacerXSmall />\n                    <StyledLink target={\"_blank\"} href={CONFIG.TOKEN_SCAN_LINK}>\n                      NFTC CA: {truncate(CONFIG.TOKEN_CONTRACT_ADDRESS, 15)}\n                    </StyledLink>\n                    <s.SpacerLarge />\n                  </>\n                ) : null}\n\n\n                {blockchain.account === \"\" ||\n                  blockchain.nftSmartContract === null ? (\n                  <>\n                    <s.Container ai={\"center\"} jc={\"center\"}>\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--normal-text)\",\n                        }}\n                      >\n                        Please connect MetaMask to the {CONFIG.NETWORK.NAME} network and then connect to this website.\n                      </s.TextDescription>\n                      <s.SpacerSmall />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--normal-text)\",\n                        }}\n                      >\n                        If you are on a computer, please unlock your MetaMask browser extension first and then refresh this page before clicking the CONNECT button.\n                      </s.TextDescription>\n                      <s.SpacerSmall />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--normal-text)\",\n                        }}\n                      >\n                        You can mint up to {CONFIG.MAX_MINT_PER_TX} NFTs per transaction. The NFTs are minted in a non-sequential, randomised order.\n                      </s.TextDescription>\n\n                      <s.SpacerLarge />\n                      <s.SpacerSmall />\n                      <StyledButton\n                        onClick={(e) => {\n                          e.preventDefault();\n                          dispatch(connect());\n                          getNftAndTokenData();\n                        }}\n                      >\n                        CONNECT\n                      </StyledButton>\n                      {blockchain.errorMsg !== \"\" ? (\n                        <>\n                          <s.SpacerSmall />\n                          <s.TextDescription\n                            style={{\n                              textAlign: \"center\",\n                              color: \"var(--big-text)\",\n                            }}\n                          >\n                            {blockchain.errorMsg}\n                          </s.TextDescription>\n                        </>\n                      ) : null}\n                    </s.Container>\n\n                    {newToSmartBch === true ? (\n                      <>\n                        <s.SpacerMedium />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--normal-text)\",\n                          }}\n                        >\n                          Here are some helpful links to get you started:\n                        </s.TextDescription>\n                        <s.SpacerXSmall />\n                        <StyledLink target={\"_blank\"} href=\"https://helpme.cash\">\n                          helpme.cash -- a collection of helpful links to get you started.\n                        </StyledLink>\n                        <s.SpacerXSmall />\n                        <StyledLink target={\"_blank\"} href=\"https://app.mistswap.fi/bridge\">\n                          MistSwap Bridge -- bridge many cryptos to SmartBch.\n                        </StyledLink>\n                        <s.SpacerXSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--normal-text)\",\n                          }}\n                        >\n                          Click CONNECT to automatically add SmartBch to MetaMask.\n                        </s.TextDescription>\n                      </>\n                    ) : (\n                      <>\n                        <s.SpacerSmall />\n                        <StyledButton\n                          onClick={(e) => {\n                            e.preventDefault();\n                            setNewToSmartBch(true);\n                          }}\n                        >\n                          New to SmartBch?\n                        </StyledButton>\n                      </>\n                    )}\n                  </>\n                ) : (\n                  <>\n                    {blockchain.account !== \"\" &&\n                      blockchain.tokenSmartContract !== null ? (\n                      <>\n                        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                          <s.TextTitle\n                            style={{\n                              textAlign: \"center\",\n                              fontSize: 28,\n                              fontWeight: \"bold\",\n                              fontFamily: \"Liberation Mono\",\n                              color: \"var(--highlighted-text)\",\n                            }}\n                          >\n                            {nftData.mintedWithNftc} / {CONFIG.MAX_SUPPLY_NFTC} minted with NFTC\n                          </s.TextTitle>\n                        </s.Container>\n                        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                          <s.TextTitle\n                            style={{\n                              textAlign: \"center\",\n                              fontSize: 28,\n                              fontWeight: \"bold\",\n                              fontFamily: \"Liberation Mono\",\n                              color: \"var(--highlighted-text)\",\n                            }}\n                          >\n                            {nftData.mintedWithBch} / {CONFIG.MAX_SUPPLY_BCH} minted with BCH\n                          </s.TextTitle>\n                        </s.Container>\n\n                        <s.SpacerLarge />\n\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--big-text)\",\n                          }}\n                        >\n                          {mintFeedback}\n                        </s.TextDescription>\n                        <s.SpacerXSmall />\n\n                        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                          <StyledRoundButton\n                            style={{ lineHeight: 0.4 }}\n                            disabled={claimingNft ? 1 : 0}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              decrementMintAmount();\n                            }}\n                          >\n                            -\n                          </StyledRoundButton>\n                          <s.SpacerMedium />\n                          <s.TextDescription\n                            style={{\n                              textAlign: \"center\",\n                              color: \"var(--highlighted-text)\",\n                            }}\n                          >\n                            <input type={\"number\"} style={{ width: \"50px\", padding: \"5px\" }} value={mintAmount} onChange={setMintAmountInput} />\n                          </s.TextDescription>\n                          <s.SpacerMedium />\n                          <StyledRoundButton\n                            disabled={claimingNft ? 1 : 0}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              incrementMintAmount();\n                            }}\n                          >\n                            +\n                          </StyledRoundButton>\n                        </s.Container>\n                        <s.SpacerSmall />\n\n                      </>\n                    ) : null}\n                    {new Date() > new Date(CONFIG.LAUNCH_DATE) ? (\n                      <>\n                        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                          <StyledButton\n                            disabled={claimingNft ? 1 : 0}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              claimNFTsWithNFTC();\n                            }}\n                          >\n                            {claimingNft ? \"BUSY\" : \"MINT with NFTC\"}\n                          </StyledButton>\n                          <s.SpacerSmall />\n                          <StyledButton\n                            disabled={claimingNft ? 1 : 0}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              claimNFTsWithBCH();\n                              getNftAndTokenData();\n                            }}\n                          >\n                            {claimingNft ? \"BUSY\" : \"MINT with BCH\"}\n                          </StyledButton>\n                        </s.Container>\n                        <s.SpacerLarge />\n                      </>\n                    ) : (\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          fontSize: 28,\n                          color: \"var(--big-text)\",\n                        }}\n                      >\n                        The minting begins {new Date(CONFIG.LAUNCH_DATE).toUTCString()}.\n                        {/* The minting ended {new Date(CONFIG.END_DATE).toUTCString()}. */}\n                      </s.TextDescription>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n\n\n\n\n\n\n            {blockchain.account !== \"\" &&\n              blockchain.tokenSmartContract !== null ? (\n              <>\n                {Number(nftData.mintedWithNftc) < CONFIG.MAX_SUPPLY_NFTC ? (\n                  <>\n                    <s.SpacerMedium />\n                    {/* <s.TextDescription\n                                      style={{\n                                        textAlign: \"center\",\n                                        color: \"var(--normal-text)\",\n                                      }}\n                                    >\n                                      NFTC token address: {CONFIG.TOKEN_CONTRACT_ADDRESS}\n                                    </s.TextDescription> */}\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--normal-text)\",\n                      }}\n                    >\n                      Before you can mint {CONFIG.NFT_NAME} NFTs with NFTC, you need to approve NFTC.\n                    </s.TextDescription>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--normal-text)\",\n                      }}\n                    >\n                      You can already approve NFTC before the minting starts.\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                  </>\n                ) : (\n                  <>\n                    <s.SpacerMedium />\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--normal-text)\",\n                      }}\n                    >\n                      Minting with NFTC is not possible anymore. You can use the last of the following buttons to revoke the approval for minting {CONFIG.NFT_NAME} with NFTC if you want.\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                  </>\n                )}\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--normal-text)\",\n                  }}\n                >\n                  Your account holds {Number(tokenData.tokenBalance) / 10 ** 18} NFTC\n                </s.TextDescription>\n                {/* <s.TextDescription\n                                    style={{\n                                      textAlign: \"center\",\n                                      color: \"var(--normal-text)\",\n                                    }}\n                                  >\n                                    NFTC approved: {Number(tokenData.tokensApproved) / 10 ** 18}\n                                  </s.TextDescription> */}\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--normal-text)\",\n                  }}\n                >\n                  You approved NFTC for {Math.floor(Number(tokenData.tokensApproved) / 10 ** 18 / 850)} {CONFIG.NFT_NAME} mints.\n                </s.TextDescription>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--normal-text)\",\n                  }}\n                >\n                  Set approval for NFTC for...\n                </s.TextDescription>\n                <s.SpacerXSmall />\n                <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                  <StyledButton\n                    disabled={approvingToken ? 1 : 0}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      approveNftc(-1);\n                    }}\n                  >\n                    {approvingToken ? \"BUSY\" : '... ' + mintAmount + ' mints'}\n                  </StyledButton>\n                  <s.SpacerSmall />\n                  <StyledButton\n                    disabled={approvingToken ? 1 : 0}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      approveNftc(-2);\n                    }}\n                  >\n                    {approvingToken ? \"BUSY\" : '... current balance'}\n                  </StyledButton>\n                  <s.SpacerSmall />\n                  <StyledButton\n                    disabled={approvingToken ? 1 : 0}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      approveNftc(2000);\n                    }}\n                  >\n                    {approvingToken ? \"BUSY\" : '... infinite mints'}\n                  </StyledButton>\n                  <s.SpacerSmall />\n                  <StyledButton\n                    disabled={approvingToken ? 1 : 0}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      approveNftc(0);\n                    }}\n                  >\n                    {approvingToken ? \"BUSY\" : 'Remove approval'}\n                  </StyledButton>\n                </s.Container>\n                <s.SpacerSmall />\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--highlighted-text)\",\n                  }}\n                >\n                  {nftcFeedback}\n                </s.TextDescription>\n              </>\n            ) : null}\n\n\n            {/* {new Date() < new Date(CONFIG.END_DATE) ? (\n            <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        fontSize: 28,\n                        color: \"var(--big-text)\",\n                      }}\n                    >\n                      Minting is possible until {new Date(CONFIG.END_DATE).toUTCString()}.\n                    </s.TextDescription>\n                    ) : (\n                      null\n                    )} */}\n            <div className=\"countdown\" style={{\n              textAlign: \"center\",\n              fontSize: 48,\n              fontWeight: \"bold\",\n              fontFamily: \"Liberation Mono\",\n              color: \"var(--big-text)\",\n            }}>\n              {/* <Countdown\n                date={new Date(CONFIG.END_DATE)}\n              >\n                <Completionist />\n              </Countdown> */}\n\n              <Countdown\n                date={new Date(CONFIG.LAUNCH_DATE)}\n              >\n                <Completionist />\n              </Countdown>\n            </div>\n            <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"90%\" }}>\n              <s.SpacerLarge />\n              <s.TextDescription\n                style={{\n                  textAlign: \"center\",\n                  color: \"var(--muted-text)\",\n                }}\n              >\n                The gas limit is set to {CONFIG.GAS_LIMIT} to ensure a successful mint.\n              </s.TextDescription>\n              <s.TextDescription\n                style={{\n                  textAlign: \"center\",\n                  color: \"var(--muted-text)\",\n                }}\n              >\n                Unused gas is automatically returned to your wallet.\n              </s.TextDescription>\n              <s.TextDescription\n                style={{\n                  textAlign: \"center\",\n                  color: \"var(--muted-text)\",\n                }}\n              >\n                If you lower the gas limit, you risk failed transactions.\n              </s.TextDescription>\n              <s.SpacerSmall />\n              <s.TextDescription\n                style={{\n                  textAlign: \"center\",\n                  fontSize: 20,\n                  color: \"var(--highlighted-text)\",\n                }}\n              >\n                Please note: Once you make the purchase, you cannot undo this action.\n              </s.TextDescription>\n              <s.SpacerLarge />\n              <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n                <StyledImg alt={\"preview\"} src={\"/config/images/preview.gif\"} />\n              </s.Container>\n            </s.Container>\n            <s.SpacerLarge />\n            <s.Container\n              jc={\"center\"}\n              ai={\"center\"}\n              style={{\n                margin: \"0\",\n                padding: \"0\",\n                color: \"#efefef\",\n              }}\n            >\n              {/* <a href=\"https://github.com/zquestz/reapers.cash\" target=\"_blank\"><img src=\"/github-alt-brands.svg\" /></a> */}\n              <div className=\"social\">\n                <a href=\"https://t.me/NFTClubOfficial\" target=\"_blank\"><img src=\"/telegram-plane-brands.svg\" /></a>\n                <a href=\"https://twitter.com/PixelGuyClub1\" target=\"_blank\"><img src=\"/twitter-brands.svg\" /></a>\n                <a href=\"https://www.instagram.com/nft_club_official/\" target=\"_blank\"><img src=\"/instagram-brands.svg\" /></a>\n                <a href=\"https://app.nftclub.cash\" target=\"_blank\"><img src=\"/bch.svg\" /></a>\n              </div>\n            </s.Container>\n          </s.Container>\n          {/* <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"preview\"}\n              src={\"/config/images/preview.gif\"}\n            />\n          </s.Container> */}\n        </ResponsiveWrapper>\n\n      </s.Container >\n\n    </s.Screen >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}